// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MyInvoices.Migrations
{
    [DbContext(typeof(MyIMContext))]
    [Migration("20180901184747_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyInvoices.Models.Customer", b =>
                {
                    b.Property<int>("CustId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("CustDesc")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.HasKey("CustId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("MyInvoices.Models.Invoice", b =>
                {
                    b.Property<int>("InvId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustId");

                    b.Property<decimal>("Gross")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Sales")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalSalesTax")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("TransDate");

                    b.HasKey("InvId");

                    b.HasIndex("CustId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("MyInvoices.Models.InvoiceDet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Gross")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("InvId");

                    b.Property<int>("ProdId");

                    b.Property<decimal>("Sales")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalSalesTax")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Units")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("InvoiceDets");
                });

            modelBuilder.Entity("MyInvoices.Models.Product", b =>
                {
                    b.Property<int>("ProdId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ProdDesc")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<decimal>("SalesTax")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("ProdId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MyInvoices.Models.Invoice", b =>
                {
                    b.HasOne("MyInvoices.Models.Customer", "Customers")
                        .WithMany()
                        .HasForeignKey("CustId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
